<Window x:Class="解析几何.启动器"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        Title="启动器" Height="300" Width="470.133" WindowStyle="None" BorderThickness="0"  AllowsTransparency="True" Background="#f5f5f5" WindowStartupLocation="CenterScreen"  Loaded="Window_Loaded_1" SizeToContent="WidthAndHeight">
  
    <Window.Resources>
        <Style TargetType="Button">
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate  TargetType="{x:Type ButtonBase}">
                        <Border x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="0" Background="{TemplateBinding Background}" SnapsToDevicePixels="True">
                            <ContentPresenter x:Name="contentPresenter" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" ContentStringFormat="{TemplateBinding ContentStringFormat}" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="5,3" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="Button.IsDefaulted" Value="True">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBEE6FD"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF3C7FB1"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FF73CFFF"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF2C628B"/>
                            </Trigger>
                            <Trigger Property="ToggleButton.IsChecked" Value="True">
                                <Setter Property="Background" TargetName="border" Value="#FFBCDDEE"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FF245A83"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="False">
                                <Setter Property="Background" TargetName="border" Value="#FFF4F4F4"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="#FFADB2B5"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="#FF838383"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>


        <!--CheckBox的样式 -->
        <Style TargetType="CheckBox" >
            <Setter Property="Content" Value=""></Setter>
            <Setter Property="FontSize" Value="16"/>
            <Setter Property="Template">
                
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type CheckBox}">
                        <Grid x:Name="isClearAll" >
                            <Rectangle x:Name="outerRectangle" Fill="#FFFFD5D5"/>
                            <Rectangle Margin="10" x:Name="highlightCircle" >
                            </Rectangle>
                            <ContentPresenter Margin="5,3" HorizontalAlignment="Center" VerticalAlignment="Center" />
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#FFB1FFB1"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFB1FFB1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">

                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFCCCCCC"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">

                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFBBBBBB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <!--RadioButton的样式 -->
        <Style TargetType="{x:Type RadioButton}">
            <Setter Property="FocusVisualStyle">
                <Setter.Value>
                    <Style>
                        <Setter Property="Control.Template">
                            <Setter.Value>
                                <ControlTemplate>
                                    <Rectangle Margin="2" SnapsToDevicePixels="True" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </Setter.Value>
            </Setter>
            <Setter Property="Background" Value="White"/>
            <Setter Property="BorderBrush" Value="#FF707070"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="FontSize" Value="26"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type RadioButton}">
                        <Grid >
                            <Rectangle x:Name="outerRectangle" Fill="#FFFFD5D5"/>
                            <Rectangle Margin="10" x:Name="highlightCircle" >
                            </Rectangle>
                            <ContentPresenter Margin="5,3" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                        </Grid>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsChecked" Value="True">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#FFB1FFB1"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFB1FFB1"/>
                            </Trigger>
                            <Trigger Property="IsChecked" Value="False">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFCCCCCC"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter TargetName="highlightCircle" Property="Fill" Value="#00000000"/>
                                <Setter TargetName="outerRectangle" Property="Fill" Value="#FFBBBBBB"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Button Click="close" Grid.Column="3" FontSize="30" Background="WhiteSmoke" Width="50" Height="50" VerticalAlignment="Top" >❌ </Button>
        <Button Click="minimize" Grid.Column="2" FontSize="30" FontWeight="Bold" Background="WhiteSmoke" Width="50" Height="50" VerticalAlignment="Top" >− </Button>
        <Image MouseLeftButtonDown="Image_MouseLeftButtonDown_1" Source="标题.png" Stretch="Fill" Width="384" HorizontalAlignment="Left" VerticalAlignment="Top" Height="72" Grid.ColumnSpan="2" />
        <WrapPanel Grid.Row="1">
            
            
            <GroupBox   Header="数学">
                <WrapPanel Orientation="Vertical">
                    <TextBlock/>
                    <Button Click="open">普通计算器</Button>
                    <TextBlock/>
                    <Button Click="open">解析几何图像</Button>
                    <TextBlock/>
                    <Button Click="open">解方程</Button>
                </WrapPanel>
            </GroupBox>
            
            <GroupBox Header="设置">
                <WrapPanel Orientation="Vertical">
                    <TextBlock/>
                    <CheckBox x:Name="isCloseAll">关闭启动器时关闭所有子窗口</CheckBox>
                    <TextBlock></TextBlock>
                    <CheckBox x:Name="isCloseLauncher">打开子程序时关闭启动器</CheckBox>
                </WrapPanel>
            </GroupBox>
        </WrapPanel>
    </Grid>
</Window>
